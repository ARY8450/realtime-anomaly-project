[flake8]
max-line-length = 127
max-complexity = 10
exclude = .git,__pycache__,build,dist,.venv
ignore = E203, E501, W503

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = \.pyi?$
extend-exclude = '''
/(
  \.git
  | __pycache__
  | build
  | dist
  | \.venv
)/
'''

[tool.isort]
profile = black
multi_line_output = 3
line_length = 127
known_first_party = realtime_anomaly_project
skip = .git,__pycache__,build,dist,.venv

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["realtime_anomaly_project"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
